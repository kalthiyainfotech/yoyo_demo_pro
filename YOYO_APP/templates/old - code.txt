{% load static %}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>YOYO</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
        integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0&icon_names=edit_square" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,0,0,0&icon_names=diamond" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.css">


    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="{% static "css/Yoyo.css" %}">
</head>

<body>
    <div class="w-[100%]">
        <div class="backdrop" id="backdrop"></div>

        <div class="flex w-[100%] ">
            <div class="main-content" id="main-content">
                <div class="main-scroll-area">
                    <div class="main-inner">
                        <div class="main-inner-left">
                            <button id="openBtn">☰</button>
                            <span class="expand">Expand menu</span>
                            <span class="collapse">Collapse menu</span>
                        </div>

                        <div class="main-inner-right">
                            <a href="{% url "Search_yoyo" %}" class="flex items-center justify-center" id="search-icon"> <span
                                    class="material-icons">search</span> </a>
                            <span class="search-span">Search</span>
                        </div>
                    </div>

                    <div class="drawer" id="drawer">
                        <ul class="drawer-data ">
                            <li id="new-chat-button">
                                <a href="{% url "new_chat" %}" class="items-center flex gap-5"> <span
                                        class="material-symbols-outlined">edit_square</span>
                                    <span>New Chat</span>
                                </a>
                                <span class="new-chat">New Chat</span>
                            </li>
                            <li class="diamond">
                                <a href="{% url "Explore_Gem_yoyo" %}" class="w-[100%] items-center flex gap-5"> <span
                                        class="material-symbols-outlined">diamond </span>
                                    <span>Explore Gems</span>
                                </a>
                                <span class="expore">Explore Gems</span>
                            </li>
                        </ul>

                        <!-- Add this inside your recent-section div, replace the empty <ul id="recent-chats"> -->
                        <div class="recent-section">
                            <h3>Recent</h3>
                            <ul id="recent-chats">
                                {% for chat in chats %}
                                <li class="recent-chat-item">
                                    <a href="#" onclick="loadChat({{ chat.id }})" class="block p-2 hover:bg-[var(--sidebar-hover)] rounded text-sm">
                                        <div class="truncate" style="color: var(--text-main)">
                                            {% if chat.title %}
                                                {{ chat.title|truncatechars:15 }}
                                            {% else %}
                                                New Chat
                                            {% endif %}
                                        </div>
                                        {% comment %} <div class="text-xs opacity-60">{{ chat.created_at|timesince }} ago</div> {% endcomment %}
                                    </a>
                                </li>
                                {% empty %}
                                <li class="text-sm opacity-60 p-2">No recent chats</li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="setting-help" id="setting-help">
                    <ul class="drawer-data">
                        <li class="dropdown-toggle " onclick="toggleDropdown()">
                            <a class="material-symbols-outlined">settings</a>
                            <span>Setting & Help</span>
                            <span class="seting-span">Setting & Help</span>
                        </li>
                        <div class="dropdown-menu" id="dropdownMenu">
                            <ul class="pb-2">

                                <li>
                                    <a href="{% url "SavedInfo_yoyo" %}" class="w-[100%] items-center flex gap-5">
                                        <span class="material-symbols-outlined"> person </span>
                                        Saved info
                                    </a>
                                    <!-- <span class="dot"></span> -->
                                </li>

                                <li>
                                    <a href="{% url "Public_Links_yoyo" %}" class="w-[100%] items-center flex gap-5">
                                        <span class="material-symbols-outlined"> link </span>
                                        Your public links
                                    </a>
                                </li>
                                <li class="submenu flex justify-between" id="themeOptions">
                                    <div class="flex gap-[20px]">
                                        <span class="material-symbols-outlined">light_mode</span>
                                        Theme
                                    </div>
                                    <i class="fa-solid fa-caret-right pe-3 text-base"></i>
                                    <ul class="theme-options">
                                        <li data-theme="system">System</li>
                                        <li data-theme="light">Light</li>
                                        <li data-theme="dark">Dark</li>
                                    </ul>
                                </li>

                                <li id="feedback_open">
                                    <span class="material-symbols-outlined"> feedback</span>
                                    Send feedback
                                </li>

                                <li id="open_help_center">
                                    <span class="material-symbols-outlined"> quiz </span>
                                    Help
                                </li>



                            </ul>

                            <div class="location-info">
                                <div>Nana Varachha, Surat, Gujarat, India</div>
                                <div><a href="#">From your IP address</a> • <a href="#">Update location</a></div>
                            </div>
                        </div>
                    </ul>
                </div>

            </div>
            <div class="z-10 gemini-header p-2 flex items-center justify-between">
                <div class="relative ">
                    <button class="mobile-menu-btn" id="mobileMenuBtn">☰</button>
                    <div class="pl-48px">
                        <h1 class="text-2xl " style="color: var(--text-main);">YOYO</h1>
                        <div class="relative">
                            <button id="model-toggle"
                                class="mt-1 rounded-full flex items-center justify-center w-[100px] h-6 font-medium text-sm "
                                style="background-color: var(--sidebar-bg); color: var(--sidebar-text);">
                                <span class="pl-2 font-semibold">2.5 Flash</span>
                                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px"
                                    fill="currentColor">
                                    <path d="M0 0h24v24H0V0z" fill="none" />
                                    <path d="M7 10l5 5 5-5H7z" />
                                </svg>
                            </button>

                            <div id="model-dropdown"
                                class="absolute left-[10%] -translate-x-1/2 top-full mt-1 w-[315px] sm:max-w-xs rounded-xl shadow-lg z-50 py-2"
                                style="background-color: var(--dropdown-bg); border-color: var(--dropdown-border); color: var(--dropdown-text);">
                                <div class="px-4 py-2 text-sm font-medium" style="color: var(--text-muted);">Choose your
                                    model</div>

                                <!-- Option 1 - Default selected -->
                                <div class="option flex justify-between items-center px-5 py-2 cursor-pointer hover:bg-[var(--dropdown-hover)] selected"
                                    style="color: var(--dropdown-text);" onclick="selectOption(this)">
                                    <div class="justify-between items-center">
                                        <span class="text-xs font-semibold">2.5 Flash</span>
                                        <div class="text-xs mt-0">Fast all-around help</div>
                                    </div>
                                    <i class="fa-regular fa-circle-check"></i>
                                </div>

                                <!-- Option 2 -->
                                <div class="option flex justify-between items-center px-5 py-2 cursor-pointer hover:bg-[var(--dropdown-hover)] selected"
                                    style="color: var(--dropdown-text);" onclick="selectOption(this)">
                                    <div class="justify-between items-center">
                                        <span class="text-xs font-semibold">2.5 Pro (preview)</span>
                                        <div class="text-xs">Reasoning, math & code</div>
                                    </div>
                                    <i class="fa-regular fa-circle-check hidden"></i>
                                </div>

                                <!-- Option 3 -->
                                <div class="option flex justify-between items-center px-5 py-2 cursor-pointer hover:bg-[var(--dropdown-hover)] selected"
                                    style="color: var(--dropdown-text);" onclick="selectOption(this)">
                                    <div class="justify-between items-center">
                                        <span class="text-xs font-semibold">Personalization (preview)</span>
                                        <div class="text-xs">Based on your Search history </div>
                                    </div>
                                    <i class="fa-regular fa-circle-check hidden"></i>
                                </div>

                                <div class="px-5 pb-3 justify-center flex items-center">
                                    <div class="cursor-pointer">
                                        <div class="flex justify-between items-center">
                                            <span class="text-xs font-semibold"
                                                style="color: var(--dropdown-text);">Upgrade
                                                to YOYO AI
                                                Pro</span>
                                        </div>
                                        <div class="text-xs">Get our most capable models &
                                            features</div>
                                    </div>
                                    <div class="pl-5">
                                        <a href="{% url "Upgrad_yoyo" %}" target="_blank"
                                            class="h-9 rounded-full justify-center flex items-center text-sm  w-[100px]"
                                            style="background-color: var(--sidebar-hover); color: var(--accent-blue);">
                                            Upgrade
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex space-x-2 items-center">
                    <a href="{% url "Upgrad_yoyo" %}" target="_blank"
                        class="h-9 block cursor-pointer rounded-md flex items-center justify-center text-xs font-semibold px-6 mr-3"
                        style="background-color: var(--sidebar-hover);">

                        Upgrade
                    </a>
                    <div id="account"></div>
                </div>
            </div>
        </div>
        <div class="gemini-data gemini-container gemini-main">
            <div class="main-chat-area">
                <div class="chat-content-wrapper gemini-chat-content-wrapper" style="background-color: var(--bg-main);">
                    <div id="chat-history" class=" space-y-4 relative">

                    </div>

                    <div id="greeting-div"
                        class="absolute inset-0 flex flex-col items-center text-center justify-center pointer-events-none">

                        <!-- <h1 class="text-3xl font-medium"> Meet </h1> -->
                        <div id="yoyo-user-name">

                        </div>
                    </div>

                    <div class="input-area-wrapper">
                        <div class="relative border-2 rounded-3xl px-6 pt-4 pb-12"
                            style="border-color: var(--border-color);">
                            <div id="image-preview-container" class="mb-2 relative hidden group w-fit">
                                <img id="image-preview" class="max-w-[100px] max-h-[100px] rounded-md" />
                                <button id="remove-preview"
                                    class="absolute top-1 right-1 w-8 h-8 text-2xl bg-black bg-opacity-60 text-white rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                    &times;
                                </button>

                            </div>

                            <textarea
                                id="user-input"
                                placeholder="Ask YOYO"
                                class="w-full text-sm md:text-base font-medium bg-transparent resize-none overflow-y-auto max-h-[150px] focus:outline-none"
                                style="color: var(--text-main);"
                                oninput="autoResize(this)"
                            ></textarea>

                            <div
                                class="input-area-buttons flex justify-between items-center text-[var(--sidebar-text);]">
                                <div class="flex gap-2 text-sm items-center">
                                    <div class="relative">
                                        <button id="plus-button"
                                            class="group h-10 w-10 flex items-center justify-center rounded-full hover:bg-[var(--bg-hover)]">
                                            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24"
                                                width="24px" fill="currentColor">
                                                <path d="M0 0h24v24H0V0z" fill="none" />
                                                <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
                                            </svg>
                                        </button>

                                        <div id="plus-dropdown"
                                            class="hidden absolute py-2 left-0 bottom-full mb-2 w-48 rounded-lg shadow-lg z-50"
                                            style="background-color: var(--dropdown-bg); color: var(--dropdown-text);">
                                            <button id="trigger-upload"
                                                class="w-full text-left px-4 py-2 flex items-center gap-2 hover:bg-[var(--dropdown-hover)]">
                                                <svg xmlns="http://www.w3.org/2000/svg" height="20px"
                                                    viewBox="0 -960 960 960" width="20px" fill="currentColor">
                                                    <path
                                                        d="M696-312q0 89.86-63.07 152.93Q569.86-96 480-96q-91 0-153.5-65.5T264-319v-389q0-65 45.5-110.5T420-864q66 0 111 48t45 115v365q0 40.15-27.93 68.07Q520.15-240 480-240q-41 0-68.5-29.09T384-340v-380h72v384q0 10.4 6.8 17.2 6.8 6.8 17.2 6.8 10.4 0 17.2-6.8 6.8-6.8 6.8-17.2v-372q0-35-24.5-59.5T419.8-792q-35.19 0-59.5 25.5Q336-741 336-706v394q0 60 42 101.5T480-168q60 1 102-43t42-106v-403h72v408Z" />
                                                </svg>
                                                Upload files
                                            </button>
                                            <button
                                                class="w-full text-left px-4 py-2 flex items-center gap-2 hover:bg-[var(--dropdown-hover)]">
                                                <svg xmlns="http://www.w3.org/2000/svg" height="20px"
                                                    viewBox="0 -960 960 960" width="20px" fill="currentColor">
                                                    <path
                                                        d="M232-120q-17 0-31.5-8.5t-22.29-22.09L80.79-320.41Q73-334 73-351t8-31l248-427q8-14 22.5-22.5t31.06-8.5h194.88q16.56 0 31.06 8.5t22.42 22.37L811-500q-21-5-42-4.5t-42 4.5L571-768H389L146-351l92 159h337q11 21.17 25.5 39.59Q615-134 634-120H232Zm68-171-27-48 172.95-302H514l110 192q-14.32 13-26.53 28.5T576-388l-96-168-111 194h196q-6 17-9.5 34.7-3.5 17.71-3.5 36.3H300Zm432 147v-108H624v-72h108v-108h72v108h108v72H804v108h-72Z" />
                                                </svg>
                                                Add from Drive
                                            </button>
                                        </div>
                                    </div>

                                </div>

                                <button id="send-button"
                                    class="group h-10 w-10 rounded-full flex items-center justify-center relative overflow-hidden transition-all duration-300 hover:bg-[var(--bg-hover)]">

                                    <span id="mic-icon"
                                        class="absolute transition-all duration-300 ease-in-out opacity-100 scale-100 translate-x-0">

                                        <i class="bi bi-send"></i>
                                    </span>

                                </button>
                            </div>
                            <input type="file" id="upload-preview-input" accept="image/*" class="hidden" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div id="help_Data"
        class="flex flex-col hidden  justify-start fixed top-[100px] rounded-2xl right-[10px] bg-[--bg-main] shadow-[0_1px_3px_0_rgba(60,64,67,0.3),_0_4px_8px_3px_rgba(60,64,67,0.15)]  lg:w-[23%] md:w-[40%] sm:w-[50%] w-[90%] h-[70vh] overflow-y-auto">

        <!-- Sticky Header -->
        <div class="sticky top-0 left-0 py-3 pb-8 w-full flex items-center justify-between bg-[--bg-main] z-10">
            <p class="text-2xl text-[--text-main] text-center w-full">Help</p>
            <button id="help_close" class="absolute right-4 top-3">
                <i class="fa-solid fa-xmark text-2xl text-[--text-main]"></i>
            </button>
        </div>

        <!-- Scrollable Content -->
        <div class="text-[--text-main] space-y-3 pb-4 text-left">
            <h6 class="text-[16px] text-[--text-main] ps-4">Popular help resources</h6>


            <div class="flex items-center gap-3 hover:bg-[--dropdown-hover] py-2 px-4 cursor-pointer">
                <div
                    class="w-[40px] h-[40px] min-h-[40px] min-w-[40px] rounded-full bg-[--examples-btn-hover]  flex justify-center items-center ">
                    <i class="fa-regular fa-file-lines text-[--add-btn]"></i>
                </div>
                <span class="text-[16px] text-[--text-main]">Manage & delete your YOYO Apps activity</span>
            </div>
            <div class="flex items-center gap-3 hover:bg-[--dropdown-hover] py-2 px-4 cursor-pointer">
                <div
                    class="w-[40px] h-[40px] min-h-[40px] min-w-[40px] rounded-full bg-[--examples-btn-hover] flex justify-center items-center">
                    <i class="fa-regular fa-file-lines text-[--add-btn]"></i>
                </div>
                <span class="text-[16px] text-[--text-main]">Use YOYO Apps</span>
            </div>
            <div class="flex items-center gap-3 hover:bg-[--dropdown-hover] py-2 px-4 cursor-pointer">
                <div
                    class="w-[40px] h-[40px] min-h-[40px] min-w-[40px] rounded-full bg-[--examples-btn-hover] flex justify-center items-center">
                    <i class="fa-regular fa-file-lines text-[--add-btn]"></i>
                </div>
                <span class="text-[16px] text-[--text-main]">Use & manage apps in YOYO</span>
            </div>
            <div class="flex items-center gap-3 hover:bg-[--dropdown-hover] py-2 px-4 cursor-pointer">
                <div
                    class="w-[40px] h-[40px] min-h-[40px] min-w-[40px] rounded-full bg-[--examples-btn-hover] flex justify-center items-center">
                    <i class="fa-regular fa-file-lines text-[--add-btn]"></i>
                </div>
                <span class="text-[16px] text-[--text-main]">Find & manage your recent chats in YOYO Apps</span>
            </div>
            <div class="flex items-center gap-3 hover:bg-[--dropdown-hover] py-2 px-4 cursor-pointer">
                <div
                    class="w-[40px] h-[40px] min-h-[40px] min-w-[40px] rounded-full bg-[--examples-btn-hover] flex justify-center items-center">
                    <i class="fa-regular fa-file-lines text-[--add-btn]"></i>
                </div>
                <span class="text-[16px] text-[--text-main]">Where you can use the YOYO web app</span>
            </div>


            <a href="" class="text-[14px] text-[--add-btn] w-full block hover:bg-[--bg-hover] py-4 px-10">Visit help
                forum <i class="fa-solid fa-arrow-up-right-from-square"></i></a>

            <div class="bg-[--dropdown-hover] py-3 mx-5 rounded-full flex items-center px-5 cursor-pointer">
                <i class="fa-solid fa-magnifying-glass me-3"></i>
                <input type="search" class="w-full bg-transparent outline-none border-0 cursor-pointer">
            </div>

            <div class="py-4 border-t-[8px] border-b-[8px] border-[--border-color]-500">
                <p class="text-[--text-main] ps-4">Need more help?</p>
                <div class="flex items-center gap-3 hover:bg-[--dropdown-hover] py-2 px-4 mt-3  cursor-pointer">
                    <div
                        class="w-[40px] h-[40px] min-h-[40px] min-w-[40px] rounded-full bg-[--examples-btn-hover] flex justify-center items-center">
                        <i class="fa-solid fa-message text-[--add-btn]"></i>
                    </div>
                    <div>
                        <p class="text-[--text-main] text-[16px]">Ask the Help Community</p>
                        <span class="text-[--text-muted] text-[16px]">Get answers from community experts</span>
                    </div>
                </div>

            </div>

            <div class="flex items-center gap-3 hover:bg-[--dropdown-hover] py-2 px-4 mt-3  cursor-pointer">
                <div
                    class="w-[40px] h-[40px] min-h-[40px] min-w-[40px] rounded-full bg-[--examples-btn-hover] flex justify-center items-center">
                    <i class="fa-solid fa-circle-exclamation text-[--add-btn]"></i>
                </div>
                <p class="text-[16px] text-[--add-btn] font-medium">Report a problem</p>
            </div>
        </div>
    </div>
    <!-- *****help js***** -->
    <script>
        const help_Data = document.getElementById('help_Data');
        const help_close = document.getElementById('help_close');
        const open_help_center = document.getElementById('open_help_center');

        open_help_center.addEventListener('click', () =>
            help_Data.classList.remove('hidden')
        );
        help_close.addEventListener('click', () =>
            help_Data.classList.add('hidden')
        );
    </script>


    <div id="feedback-data"
        class="flex z-50 flex-col hidden justify-between fixed top-0 right-0 rounded-l-2xl bg-[#1F1F1F] shadow-[0_1px_3px_0_rgba(60,64,67,0.3),_0_4px_8px_3px_rgba(60,64,67,0.15)] lg:w-[28%] md:w-[40%] sm:w-[50%] w-[90%] h-[100vh] overflow-hidden">

        <!-- Sticky Header -->
        <div
            class="sticky top-0 left-0 py-5 px-4 w-full flex items-center justify-between bg-[#1F1F1F] shadow-[0_1px_4px_rgba(0,0,0,0.6)] z-10">
            <p class="text-lg text-white w-full">Send feedback to YOYO</p>
            <button id="feedback_close"
                class="absolute right-4 w-[50px] h-[50px] rounded-full top-3 hover:bg-[#303134]">
                <i class="fa-solid fa-xmark text-2xl text-white"></i>
            </button>
        </div>

        <!-- Scrollable Content + Bottom -->
        <div class="flex flex-col justify-between h-full overflow-y-auto">
            <div class="space-y-3 text-white p-4 text-left">
                <h6 class="text-[14px]">Describe your feedback (required)</h6>

                <textarea name="feedback_message" id="feedback_message"
                    placeholder="Tell us what prompted this feedback..." rows="4"
                    class="w-full bg-transparent border rounded p-2 outline-none focus:ring-2 focus:ring-[#8AB4F8] focus:border-0 text-[16px] text-white"></textarea>


                <span class="text-[12px]">Please don’t include any sensitive information <i
                        class="fa-regular fa-circle-question"></i></span>

                <p class="text-[16px]">A screenshot will help us better understand your feedback.</p>

                <div
                    class="w-full border text-center text-[#7cacf8] rounded-md py-2 hover:border-[#7cacf8] hover:bg-[#2A3039] cursor-pointer">
                    <p class="text-[15px]"><i class="fa-solid fa-desktop"></i> Capture screenshot</p>
                </div>
            </div>

            <!-- Fixed Bottom Section -->
            <div class="mt-auto  bg-[#1F1F1F] ">
                <div class="flex items-center gap-2 mb-4 px-4">
                    <input type="checkbox" name="checkbox" id="checkbox"
                        class="w-5 h-5 bg-[#1F1F1F] accent-[#7CACF8] cursor-pointer border rounded" />
                    <label for="checkbox" class="text-white cursor-pointer">
                        We may email you for more information or updates
                    </label>
                </div>

                <p class="text-[14px] text-white mb-4 px-4">
                    Some account and system information may be sent to YOYO. We will use it to fix problems and
                    improve
                    our services, subject to our Privacy Policy and Terms of Service. We may email you for more
                    information
                    or updates. Go to Legal Help to ask for content changes for legal reasons.
                </p>

                <div class="text-end shadow-[0_-4px_6px_rgba(0,0,0,0.15)] mt-2 p-4">
                    <button id="sendBtn" disabled class="bg-[#373737] py-2 px-6 rounded-lg text-white text-[16px]">
                        Send
                    </button>

                </div>
            </div>
        </div>
    </div>




    <!-- Replace the entire script section in your HTML with this -->
<script>
    document.getElementById('yoyo-user-name').innerHTML = `
        <h1
            class="text-3xl bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 text-transparent bg-clip-text">
            <span class="text-[--text-main] ">Meet</span>
            YOYO.
            <h1 class="text-3xl text-[--text-main] ">your personal AI assistant</h1>
        </h1>
    `;
</script>

<!-- Add CSRF token for AJAX requests -->
{% csrf_token %}

<script>
// Complete chat functionality for YOYO
(function () {
    const sendBtn = document.getElementById("send-button");
    const input = document.getElementById("user-input");
    const chatArea = document.getElementById("chat-history");
    const greetingDiv = document.getElementById("greeting-div");
    const newChatButton = document.getElementById("new-chat-button");
    const recentChatsContainer = document.getElementById("recent-chats");

    let currentChatId = {% if current_chat %}{{ current_chat.id }}{% else %}0{% endif %};
    const sendUrlTemplate = "{% url 'send_message' 0 %}";

    function getCsrfToken() {
        const tokenInput = document.querySelector('input[name="csrfmiddlewaretoken"]');
        if (tokenInput && tokenInput.value) return tokenInput.value;
        const match = document.cookie.match(/(^|;)\s*csrftoken=([^;]+)/);
        return match ? decodeURIComponent(match[2]) : "";
    }

    function buildSendUrl(chatId) {
        return sendUrlTemplate.replace(/0\/?$/, chatId + "/");
    }

    function escapeHtml(str) {
        return String(str || "").replace(/[&<>"']/g, (m) =>
            ({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#039;" }[m])
        );
    }

    // Clear chat area and show greeting
    function clearChatArea() {
        chatArea.innerHTML = "";
        greetingDiv.classList.remove('hidden');
        greetingDiv.style.display = 'flex';
        input.value = "";
        input.focus();
        currentChatId = 0;
        
        // Update URL without reload
        const newUrl = window.location.origin + window.location.pathname.split('/chat/')[0] + '/';
        history.pushState(null, '', newUrl);
        
        document.title = 'YOYO - Your Personal AI Assistant';
        console.log('Chat area cleared, ready for new chat');
    }

    // Hide greeting when first message is sent
    function hideGreeting() {
        greetingDiv.classList.add('hidden');
        greetingDiv.style.display = 'none';
    }

    // Add chat to recent list
    function addToRecentChats(chatId, preview) {
        const chatItem = document.createElement('li');
        chatItem.className = 'recent-chat-item';
        chatItem.innerHTML = `
            <a href="#" onclick="loadChat(${chatId})" class="block p-2 hover:bg-[var(--sidebar-hover)] rounded text-sm">
                <div class="truncate" style="color: var(--text-main)">${escapeHtml(preview)}</div>
                <div class="text-xs opacity-60">Just now</div>
            </a>
        `;
        
        // Remove if already exists (prevent duplicates)
        const existingItems = recentChatsContainer.querySelectorAll('.recent-chat-item');
        existingItems.forEach(item => {
            const link = item.querySelector('a');
            if (link && link.getAttribute('onclick') === `loadChat(${chatId})`) {
                item.remove();
            }
        });
        
        if (recentChatsContainer.firstChild) {
            recentChatsContainer.insertBefore(chatItem, recentChatsContainer.firstChild);
        } else {
            recentChatsContainer.appendChild(chatItem);
        }
    }

    function formatTimestamp(date) {
        const now = new Date();
        const diff = now - date;
        const minutes = Math.floor(diff / 60000);
        
        if (minutes < 1) return 'just now';
        if (minutes < 60) return `${minutes}m ago`;
        if (minutes < 1440) return `${Math.floor(minutes / 60)}h ago`;
        return date.toLocaleDateString();
    }

    async function sendMessage() {
        const text = input.value.trim();
        if (!text) return;

        if (chatArea.children.length === 0) {
            hideGreeting();
        }

        // User bubble
        const userBubble = document.createElement("div");
        userBubble.className = "fade-in p-4 rounded-2xl max-w-[70%] ml-auto mb-4";
        userBubble.style.backgroundColor = 'var(--accent-blue, #4285f4)';
        userBubble.style.color = 'white';
        userBubble.innerHTML = `
            <div class="text-sm md:text-base leading-relaxed">${escapeHtml(text)}</div>
            <div class="text-xs opacity-70 mt-2">just now</div>
        `;
        chatArea.appendChild(userBubble);
        chatArea.scrollTop = chatArea.scrollHeight;
        
        const userMessage = text;
        input.value = "";

        // Bot thinking bubble
        const botBubble = document.createElement("div");
        botBubble.className = "fade-in p-4 rounded-2xl max-w-[70%] mr-auto mb-4";
        botBubble.style.backgroundColor = 'var(--sidebar-bg)';
        botBubble.style.color = 'var(--text-main)';
        botBubble.innerHTML = `
            <div class="flex items-center gap-2">
                <div class="typing-indicator">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
                <span class="text-sm">YOYO is thinking...</span>
            </div>
        `;
        chatArea.appendChild(botBubble);
        chatArea.scrollTop = chatArea.scrollHeight;

        try {
            const url = buildSendUrl(currentChatId || 0);
            const res = await fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "X-CSRFToken": getCsrfToken(),
                },
                body: JSON.stringify({ message: userMessage }),
            });

            if (!res.ok) {
                throw new Error(`Server error: ${res.status}`);
            }

            const data = await res.json();
            if (data.error) {
                botBubble.innerHTML = `
                    <div class="text-red-500 flex items-center gap-2">
                        <i class="fas fa-exclamation-triangle"></i>
                        <span>${escapeHtml(data.error)}</span>
                    </div>
                `;
            } else {
                currentChatId = data.chat_id;
                const timestamp = formatTimestamp(new Date());
                
                botBubble.innerHTML = `
                    <div class="text-sm md:text-base leading-relaxed whitespace-pre-wrap">${escapeHtml(data.bot_reply || "No reply")}</div>
                    <div class="text-xs opacity-60 mt-2">${timestamp}</div>
                `;
                
                const chatUrl = `/chat/${currentChatId}/`;
                history.pushState(null, '', chatUrl);
                document.title = `${data.chat_title || 'Chat'} - YOYO`;
                
                if (chatArea.children.length === 2) {
                    const preview = userMessage.length > 40 ? 
                        userMessage.substring(0, 40) + "..." : userMessage;
                    addToRecentChats(currentChatId, preview);
                }
            }
        } catch (err) {
            botBubble.innerHTML = `
                <div class="text-red-500 flex items-center gap-2">
                    <i class="fas fa-exclamation-triangle"></i>
                    <span>Network error: ${escapeHtml(err.message)}</span>
                </div>
            `;
        }

        chatArea.scrollTop = chatArea.scrollHeight;
    }

    function loadExistingChat(chatId) {
        window.location.href = `/chat/${chatId}/`;
    }

    // Event Listeners
    sendBtn.addEventListener("click", sendMessage);

    newChatButton.addEventListener("click", function(e) {
        e.preventDefault();
        const anchor = newChatButton.querySelector('a');
        if (anchor) {
            anchor.addEventListener('click', function(ae) {
                ae.preventDefault();
            });
        }
        clearChatArea();
    });

    input.addEventListener("keypress", (e) => {
        if (e.key === "Enter" && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });

    // Make functions global
    window.loadChat = function(chatId) {
        loadExistingChat(chatId);
    };

    // Auto-resize function
    window.autoResize = function(textarea) {
        textarea.style.height = 'auto';
        textarea.style.height = Math.min(textarea.scrollHeight, 150) + 'px';
    };

    // Initialize
    if (chatArea.children.length > 0) {
        hideGreeting();
    }

    // Add CSS
    const style = document.createElement('style');
    style.textContent = `
        .fade-in {
            animation: fadeIn 0.3s ease-out;
        }
        
        @keyframes fadeIn {
            from { 
                opacity: 0; 
                transform: translateY(10px); 
            }
            to { 
                opacity: 1; 
                transform: translateY(0); 
            }
        }
        
        .typing-indicator {
            display: inline-flex;
            gap: 2px;
        }
        
        .typing-indicator span {
            width: 6px;
            height: 6px;
            border-radius: 50%;
            background-color: var(--text-muted);
            animation: typing 1.4s infinite ease-in-out;
        }
        
        .typing-indicator span:nth-child(1) { animation-delay: -0.32s; }
        .typing-indicator span:nth-child(2) { animation-delay: -0.16s; }
        
        @keyframes typing {
            0%, 80%, 100% { 
                transform: scale(0.8);
                opacity: 0.5;
            }
            40% { 
                transform: scale(1);
                opacity: 1;
            }
        }
    `;
    document.head.appendChild(style);

})();

// Feedback functionality
const feedback_Data = document.getElementById('feedback-data');
const feedback_close = document.getElementById('feedback_close');
const feedback_open = document.getElementById('feedback_open');
const feedback_message = document.getElementById('feedback_message');
const sendFeedbackBtn = document.getElementById('sendBtn');

if (feedback_message) {
    feedback_message.addEventListener('input', function() {
        sendFeedbackBtn.disabled = this.value.trim() === '';
        sendFeedbackBtn.className = this.value.trim() === '' ? 
            'bg-[#373737] py-2 px-6 rounded-lg text-white text-[16px]' :
            'bg-[#1a73e8] py-2 px-6 rounded-lg text-white text-[16px] cursor-pointer hover:bg-[#1557b0]';
    });
}

feedback_open.addEventListener('click', () => {
    feedback_Data.classList.remove('hidden');
});

feedback_close.addEventListener('click', () => {
    feedback_Data.classList.add('hidden');
});
</script>



    <script src="{% static "JS/Gemini.js" %}"></script>

    

</body>

</html>



from django.shortcuts import render, redirect ,get_object_or_404
from django.contrib import messages
from django.contrib.auth.hashers import make_password
from .forms import RegisterForm
from .models import UserData,Message,Chat
from django.contrib.auth.hashers import check_password
import os ,json
from bardapi import Bard
from django.http import JsonResponse
from django.db.models import Max




def register_yoyo(request):
    if request.session.get("user_id"):
        return redirect("home")

    if request.method == "POST":
        form = RegisterForm(request.POST)
        if form.is_valid():
            user = form.save(commit=False)
            user.password = make_password(form.cleaned_data["password"])  
            user.save()
            messages.success(request, "Registration successful! Please login.")
            return redirect("login")
        else:
            messages.error(request, "Please correct the errors below.")
    else:
        form = RegisterForm()
    return render(request, "Register.html", {"form": form})


def login_yoyo(request):
    if request.session.get("user_id"):
        return redirect("home")

    if request.method == "POST":
        email = request.POST.get("email")
        password = request.POST.get("password")

        try:
            user = UserData.objects.get(email=email)
            if check_password(password, user.password):
                request.session["user_id"] = user.id
                request.session["user_name"] = user.name
                messages.success(request, f"Welcome back, {user.name}!")
                return redirect("home")
            else:
                messages.error(request, "Incorrect password.")
        except UserData.DoesNotExist:
            messages.error(request, "Email not registered.")

    return render(request, "Login.html")


def logout_yoyo(request):
    request.session.flush()  
    return redirect("login")  



os.environ['_BARD_API_KEY'] = "g.a000zQjK6BR93_A9F8DfZ8yOT_5TyCG7mUNu8llCI-Nri1ZBTk7oZhBWihQBRny7k_5UM5Mg5gACgYKAcgSARUSFQHGX2MiMhnVGsHablU-CEYjkqihcxoVAUF8yKrDSgDa2XQHqa44IS6rT7C-0076"




def home_yoyo(request):
    if not request.session.get("user_id"):
        return redirect("login")

    user = get_object_or_404(UserData, id=request.session["user_id"])
    # Order chats by last message timestamp
    chats = Chat.objects.filter(user=user).annotate(
        last_message_time=Max("messages__timestamp")
    ).order_by("-last_message_time")

    return render(request, "Yoyo.html", {
        "user": user,
        "chats": chats,
    })


def new_chat(request):
    """Open a blank chat window but do not save to DB yet"""
    if not request.session.get("user_id"):
        return redirect("login")

    user = get_object_or_404(UserData, id=request.session["user_id"])
    chats = Chat.objects.filter(user=user).annotate(
        last_message_time=Max("messages__timestamp")
    ).order_by("-last_message_time")

    return render(request, "Yoyo.html", {
        "user": user,
        "chats": chats,
        "current_chat": None,
        "messages": [],
        "is_new_chat": True,
    })


def chat_detail(request, chat_id=None):
    """Handles displaying existing chats with their message history"""
    if not request.session.get("user_id"):
        return redirect("login")

    user = get_object_or_404(UserData, id=request.session["user_id"])
    chat = None
    messages = []
    
    if chat_id:
        chat = get_object_or_404(Chat, id=chat_id, user=user)
        # Order messages by timestamp (chronological)
        messages = chat.messages.all().order_by("timestamp")

    chats = Chat.objects.filter(user=user).annotate(
        last_message_time=Max("messages__timestamp")
    ).order_by("-last_message_time")

    return render(request, "Yoyo.html", {
        "user": user,
        "chats": chats,
        "current_chat": chat,
        "messages": messages,
        "is_new_chat": False,
    })


def send_message(request, chat_id=None):
    if not request.session.get("user_id"):
        return JsonResponse({"error": "Unauthorized"}, status=401)

    if request.method != "POST":
        return JsonResponse({"error": "Invalid request"}, status=400)

    user = get_object_or_404(UserData, id=request.session["user_id"])
    
    try:
        data = json.loads(request.body)
        text = data.get("message", "").strip()
    except json.JSONDecodeError:
        return JsonResponse({"error": "Invalid JSON"}, status=400)

    if not text:
        return JsonResponse({"error": "Empty message"}, status=400)

    chat = None
    if chat_id and chat_id != 0:
        try:
            chat = Chat.objects.get(id=chat_id, user=user)
        except Chat.DoesNotExist:
            return JsonResponse({"error": "Chat not found"}, status=404)
    
    # Create new chat if none exists
    if not chat:
        chat = Chat.objects.create(user=user, title="New Chat")
    
    # Update chat title if it's still "New Chat"
    if chat.title == "New Chat":
        snippet = " ".join(text.split()[:6])
        chat.title = snippet.capitalize()
        chat.save()
    
    # Save user message
    Message.objects.create(chat=chat, sender="user", text=text)
    
    # Generate AI response from Bard
    try:
        bard = Bard(token=os.environ.get("_BARD_API_KEY"))
        ai_response = bard.get_answer(text).get("content", "No reply from Bard.")

        # 🔥 Customization: replace identity
        ai_response = ai_response.replace("Gemini", "YOYO by Kalathiya Info")
        ai_response = ai_response.replace("Google", "Kalathiya Info")  # optional
    except Exception as e:
        ai_response = f"Error: {str(e)}"
    
    # Save bot message
    Message.objects.create(chat=chat, sender="bot", text=ai_response)

    return JsonResponse({
        "chat_id": chat.id,
        "user_message": text,
        "bot_reply": ai_response,
        "chat_title": chat.title,
    })



def brain_yoyo(request):
    return render(request,"Brainstormer.html")

def Career_guide_yoyo(request):
    return render(request,"Career_guide.html")

def Chess_champ_yoyo(request):
    return render(request,"Chess_champ.html")

def Coding_partner_yoyo(request):
    return render(request,"Coding_partner.html")

def Explore_Gem_yoyo(request):
    return render(request,"Explore_Gem.html")

def ForgotPassword_yoyo(request):
    return render(request,"ForgotPassword.html")

def Learning_coach_yoyo(request):
    return render(request,"Learning_coach.html")

def NewGem_yoyo(request):
    return render(request,"Learning_coach.html")

def Public_Links_yoyo(request):
    return render(request,"Public_Links.html")

def SavedInfo_yoyo(request):
    return render(request,"SavedInfo.html")

def Search_yoyo(request):
    return render(request,"Search.html")

def Upgrad_yoyo(request):
    return render(request,"Upgrad.html")

def Writing_editor_yoyo(request):
    return render(request,"Writing_editor.html")

def Explore_Gem_yoyo(request):
    return render(request,"Explore_Gem.html")